<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_doimatkhau.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_dong.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAB10RVh0VGl0
        bGUAQ2xvc2U7RXhpdDtCYXJzO1JpYmJvbjtGA7noAAAI60lEQVRYR8WXd1RUZxqHzWaz6ZqiJrFEowYE
        RVRAhYGBoQ1SFGRVEvvKqsGCx8AqqBQVNLoqxY49alBEiggaiUoHUcqAdFH6DEVEmuSf377vHQbBWXfP
        2bN79jvn8bt3Zpjn977f/e5cBwH4vyKMmuA9g2qC9vDhW/+GP/wXeKs0wJemfqP6QCBPKsEfiXeIP73G
        u2/gvX/B+/3gc/48fz97BgyWv53js9myItA3u3K3Hyp3++IxE+gLeg0VAcQuH2I7ylXs3IbSHSq2otTf
        GyWMnzeKGV8vFPluIbxR5LMF+Vv/9jDR3U1KLi6QnX2DT96p2Lld3nb/DnqqCtHztAA9T2ToqcxDz+Nc
        dJc/RHdZNrqLs9D1KB1dhanoyk9GZ+49dOb8ho7sX9GRlYD29BtoT4lFW9I1tN2NQFtiONpuXcTzhPOo
        PxuEvC0eCnJxNwZ0gU/eLaOknbmJeH7jPJ7HvaL1+jm0xp5FawwRfQat107jWeRJtESEoeXKcbSEH0PL
        L0fQfDEUzT8Ho+ncQTSe2Y/GU/ugCNsD+bEAyI/sRO3fvZDrsZGvvA+Jt1msGhzgvRJvT7SnxZDoFIl6
        iTqFZ9eIyDA8u0rCiBN90maWXjqMpguhaCJx41mlWKESH98tiBsO+aM+2Bc1gT8ie8NaDvARoR7gkedG
        vEiKIAkJBKiyK8Tlo2gOJwThETRdVElD0HguiKQkPk3ik/sgP/ETVRyIhsMBJN6B+hA/1AdtR91+bzzd
        sQGZa1ZzgI8JtQDvy9zX0ZpdIgm1UgW1telCiBJu73kSUosVZw5Qi5VSRdheZbVHWbwT9aEkDmaxD4m3
        om7fFtTs8cSTbT8gbeVKDjCYUAvwwQPXFWiNP08CWr9zJGB4LYnqQwG44eSA8/oGuO3ijPojgSSlNpO0
        NmQHbjrPwcnJUxAltUBlgCdqSVzD4p88Ub3bA1W7NuLxFlfcmb9QFYC3Y9/gNB+kOjpSZVTNCaomjFp5
        kgQn9qA62B/RUitEevogISYFEavW47qDDWqoyhqqMnq2FS67rkV8dDKuuHvhF5EhKnzdUU1rXrVrE6qo
        9U9816F4lTPiJFIOMIRQC/BhssNc1O7dhEqPpcIVW08XEJPgZI9oL3+kZleg4kkjissbELnGHbG2UsTO
        tib5OtzLKEFxRQNKnzQhmoJGWZjhqf8GPCVx5WZXlK6eh/yFlogxMecAnxBqAT66Z+dAqTeg3M0Z5T84
        o+LHJaja6Y7LRkZoqJajsqYFrS960Nr+EqWP5UKIy39dj7vpJSihYM0vXqK5rRvPFC04raNLf7+cxM4o
        XuGA4mX2yJsvQZRIwgE+JdQD/Dbbga5UN5StdkTpKhVOSHS2R9q27eh++TsFeImWNhLRXPJYgcycSpRU
        NqLpebcAf+ae52bE2VigiKRFS+zwaKktHi22RY6jGFdnid8Y4OPbUntUbluFElcHYg6Kmb84oMJjBW7a
        2yDDz08QCDKqlOfGfnR3/44Ub29Em4tR5r5YkBYutkHh99Yo+F6KB/ZGuDJDCPAZwbfjvsEBBt+ysqUr
        dQW1zA5Fy3tZxrM9yj2W44bUHEle3lC0dkJBQkVrVx8NzR24u9kL0abGKNu4lKRSFLhIIXOxgozWPn+B
        Be7PnoVwPREH+JwYEIDbMTjeXIqyTZxcisIllHyRlI5nEzYooPmGpRhRq9ejsEwBRQsFaOmCnKgn6po6
        EOe2EdFiQ+QtsISMhLI/WyDfWSKQN88UmVYGuDjtzQGGxJlZoWSdCwq+s6KWUdtcLIVjriDOzBDXaPsl
        JhejoFyB+maSCnQI8rqmLuSXNCBipRuuGeohx8kMeU6myGUcTZAz1wRpkmn4WdeQAwwlBvwicoBPYsWW
        KKbtIqOrNX8BMd+ckOCWpTGi1mzA7eQiyKh6pbADnV096CBqGztQ00teUR0iXd0QI9JHjgOJ7UV4yNgZ
        IUWsi3M6MznAMEI9AG+RAtoyefPEyCXynJRzlFiEirIa5Jc2CLJaknd09iDL3xeZfr7CcbWiQ6BK3o66
        agUu6U3HA1tDJbT22dKZSDKehNNa+hxgOKEW4NNIQwlktNYP54ioZYSDsVDBr7aWKDx6GG0dPdT6TkGY
        vcMfCdZmiLcyFYK002vcFf5MXkgwrpsZk3QG7lvPQBatfZalPu7M0sZJjemqAPyUNSDAZ7xFchdaUOpZ
        QuqHPFMFsqVzEE8yDtEllyPb3w83bSQoXDYXhfReAofw80GnvAF5oSF0IRohx8VWkGZaTEemOTMNifqa
        ODFhKgf4ghgQgNvxebg+Xyxi3JcaKLE2oCoMhDCyJXORaGeJWIkJ7jhYI3+xvbIyIn+RHW7bmuMq/QbE
        007J/c5OkGeYTkOm6VRkmOkindb/9tQJOPaNLgf4klAPcHG6CPfpZpFFqbMs9IT0fMwVZFErZYvojrbS
        me7pUmT1ViUgmU63WSsULnek9+iGZaaHDPEUkk5BmojRQRqt/02dcTg8VocDfEWoBRh6QXcWsuhiyZBQ
        aoaS981chVDJVKSb0mxKAhN6nUXGfKyDdEE0GWlGOkg1nPQKWvvUmVpImDwGh0ZrqwXgfzjAMN4iGVQR
        f1kafWmamL5UOKYvNabZhGeCRKk0pxoRLBApRSkMyVIMtZBCwpSZE5EyQxPJMyYiyUATcVqjETJiIgcY
        QfAj+oAAQ09r6wttSxVpUxWUuh8pPHMlvfQJZtK5IJpIIqUsmWRMkoEGkvS+7eO65igEfanxTzsgbMMw
        jWnyGB1N3NIdhwSdb4ixiJ805hXaXwvECefKY+GcoeoESBI3kdAcScJeNEYQIxE+djT2DZ/Aj+V8IxoQ
        QHgk2zpac9HR8VOajo/XBXNs3BS6anVwZOxkgcNjJgkc+loboaMnIXSUFkJHEiO0qLXEV5oIJoKIg1Tp
        wS+I4Ro4MHwC9g//FnuHjW9eO2TkUnKpHkqFADxUXeDndf6h4H3KW4Vb9Tq8fq8z8g2M6gef8w2Inwd5
        yfvkPPhE1Ql+k9vzOv3/P/ifoPoeVeUDAqiG6o3/Nb1j0KB/AMYUfCkDw9hpAAAAAElFTkSuQmCC
</value>
  </data>
</root>